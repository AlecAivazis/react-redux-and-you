section
    section
        h3 Actions

    section
        pre
            code(style="margin-left: 25%").
                {
                    type: 'select_recipe',
                    item: {
                        name: 'Risotto',
                    }
                }

    section
        h3 Action Creators

    section
        pre
            code.
                // action types are exported for later use
                export const SELECT_RECIPE = 'SELECT_RECIPE'

                // more readible factory
                const addCartItem(name) => {
                    return {
                        type: SELECT_RECIPE,
                        item: {
                            name: name
                    }
                }

    section
        h3 Our minimal state


    section
        pre
            code.
                {
                    selectedItems: [{name: 'Steak'}, ...],
                }


    section
        h3 Reducers

    section
        pre(style="max-height: none; font-size: 20px; margin-bottom: 10px;")
            code(style="max-height: none").
                // the initial state
                const initialItems = {
                    items: []
                }


                // a reducer is just a pure function!
                const itemList = (prevState = initialState, action) => {

                    // for now, let's not do anything
                    return prevState

                }

    section
        pre(style="max-height: none; font-size: 20px; margin-bottom: 10px;")
            code(style="max-height: none").
                // import the action type
                import SELECT_RECIPE from 'actions/types'

                // ...

                // a reducer is just a pure function!
                const itemList = (prevState = initialState, action) => {
                    // if the action designates a new cart item
                    if (action.type == SELECT_RECIPE) {
                        // return the new state with new items added
                        return {
                            ...prevState,
                            items: [...prevState.items, action.item]
                        }
                    }

                    // if its an action we dont care about, let's not do anything
                    return prevState
                }

    section
        h3 Handling more actions

    section
        pre(style="max-height: none; font-size: 20px; margin-bottom: 10px;")
            code(style="max-height: none").
                // if the action designates a new cart item
                if (action.type == SELECT_ITEM) {
                    // return the new state with new item added
                    return {
                        ...prevState,
                        items: [...prevState.items, action.item]
                    }
                // otherwise if the action is a new reccommendation
                } else if (action.type == ADD_FILTER) {
                    // return the new state with new reccomendation added
                    return {
                        ...prevState,
                         filter: payload
                    }
                }

    section
        h3 Splitting reducers

    section
        pre(style="max-height: none; font-size: 20px; margin-bottom: 10px;")
            code(style="max-height: none").
                const itemReducer = (prevState = [], action) => {
                    // if the action designates a new cart item
                    if (action.type == SELECT_ITEM) {
                        // return the new state with new item added
                        return [...prevState, action.item]
                    }
                    // otherwise its an action this reducer isn't interested in
                    return prevState
                }

                const filterReducer = (prevState = '', action) => {
                    // if the action designates a new cart item
                    if (action.type == ADD_FILTER) {
                        // return the new state with new item added
                        return payload
                    }
                    // otherwise its an action this reducer isn't interested in
                    return prevState
                }

    section
        pre(style="max-height: none; font-size: 20px; margin-bottom: 10px;")
            code(style="max-height: none").
                // combine them into a single function
                const reducer = (prevState, action) => ({
                    items: itemReducer(prevState.items, action),
                    filter: filterReducer(
                                        prevState.filter,
                                        action
                                    )
                })

    section
        pre(style="max-height: none; font-size: 20px; margin-bottom: 10px;")
            code(style="max-height: none").
                import {combineReducers} from redux
                // combine them into a single function
                const reducer = combineReducers({
                    items: itemReducer,
                    filter: filterReducer
                })

